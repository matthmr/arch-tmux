 cmd-new-session.c | 4 ++++
 format.c          | 4 +++-
 input-keys.c      | 2 +-
 tty-keys.c        | 1 +
 4 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/cmd-new-session.c b/cmd-new-session.c
index c90369bc..1abc2124 100644
--- a/cmd-new-session.c
+++ b/cmd-new-session.c
@@ -316,6 +316,10 @@ cmd_new_session_exec(struct cmd *self, struct cmdq_item *item)
 	}
 	notify_session("session-created", s);
 
+	if (!detached && !already_attached) {
+		notify_client("client-attached", c);
+	}
+
 	/*
 	 * Set the client to the new session. If a command client exists, it is
 	 * taking this session and needs to get MSG_READY and stay around.
diff --git a/format.c b/format.c
index aff72b7c..b0b11cf1 100644
--- a/format.c
+++ b/format.c
@@ -34,6 +34,8 @@
 
 #include "tmux.h"
 
+#define FORMAT_CMD_INTERVAL (60) // min
+
 /*
  * Build a list of key-value pairs and use them to expand #{key} entries in a
  * string.
@@ -392,7 +394,7 @@ format_job_get(struct format_expand_state *es, const char *cmd)
 	t = time(NULL);
 	if (force && fj->job != NULL)
 	       job_free(fj->job);
-	if (force || (fj->job == NULL && fj->last != t)) {
+	if (force || (fj->job == NULL && t > (fj->last + FORMAT_CMD_INTERVAL))) {
 		fj->job = job_run(expanded, 0, NULL, NULL, NULL,
 		    server_client_get_cwd(ft->client, NULL), format_job_update,
 		    format_job_complete, NULL, fj, JOB_NOWAIT, -1, -1);
diff --git a/input-keys.c b/input-keys.c
index 4dd42e1b..99513efe 100644
--- a/input-keys.c
+++ b/input-keys.c
@@ -113,7 +113,7 @@ static struct input_key_entry input_key_defaults[] = {
 	  .data = "\033[5~"
 	},
 	{ .key = KEYC_BTAB,
-	  .data = "\033[Z"
+	  .data = "\033\011"
 	},
 
 	/* Arrow keys. */
diff --git a/tty-keys.c b/tty-keys.c
index 3debeea1..165bcd5e 100644
--- a/tty-keys.c
+++ b/tty-keys.c
@@ -1571,6 +1571,7 @@ tty_keys_colours(struct tty *tty, const char *buf, size_t len, size_t *size,
 		else
 			log_debug("bg is %s", colour_tostring(n));
 		*bg = n;
+		environ_set(global_environ, "BG", ENVIRON_HIDDEN, "%x", n & 0xffffff);
 	}
 
 	return (0);
